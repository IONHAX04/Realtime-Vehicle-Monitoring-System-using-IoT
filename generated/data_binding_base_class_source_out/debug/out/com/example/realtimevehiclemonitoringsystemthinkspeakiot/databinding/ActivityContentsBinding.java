// Generated by view binder compiler. Do not edit!
package com.example.realtimevehiclemonitoringsystemthinkspeakiot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.realtimevehiclemonitoringsystemthinkspeakiot.R;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.PieChart;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContentsBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final ImageView analysis;

  @NonNull
  public final BarChart barchart;

  @NonNull
  public final ImageView bike;

  @NonNull
  public final TextView connect;

  @NonNull
  public final TextView connection;

  @NonNull
  public final RelativeLayout connectionDetails;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final TextView fleet;

  @NonNull
  public final ImageView health;

  @NonNull
  public final HorizontalScrollView horizz;

  @NonNull
  public final ImageView location;

  @NonNull
  public final LinearLayout mappp;

  @NonNull
  public final WebView maps;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final ImageView payments;

  @NonNull
  public final PieChart piechart;

  @NonNull
  public final ToolbarBinding toolbar;

  @NonNull
  public final TextView util;

  private ActivityContentsBinding(@NonNull DrawerLayout rootView, @NonNull ImageView analysis,
      @NonNull BarChart barchart, @NonNull ImageView bike, @NonNull TextView connect,
      @NonNull TextView connection, @NonNull RelativeLayout connectionDetails,
      @NonNull DrawerLayout drawerLayout, @NonNull TextView fleet, @NonNull ImageView health,
      @NonNull HorizontalScrollView horizz, @NonNull ImageView location,
      @NonNull LinearLayout mappp, @NonNull WebView maps, @NonNull NavigationView navView,
      @NonNull ImageView payments, @NonNull PieChart piechart, @NonNull ToolbarBinding toolbar,
      @NonNull TextView util) {
    this.rootView = rootView;
    this.analysis = analysis;
    this.barchart = barchart;
    this.bike = bike;
    this.connect = connect;
    this.connection = connection;
    this.connectionDetails = connectionDetails;
    this.drawerLayout = drawerLayout;
    this.fleet = fleet;
    this.health = health;
    this.horizz = horizz;
    this.location = location;
    this.mappp = mappp;
    this.maps = maps;
    this.navView = navView;
    this.payments = payments;
    this.piechart = piechart;
    this.toolbar = toolbar;
    this.util = util;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contents, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.analysis;
      ImageView analysis = ViewBindings.findChildViewById(rootView, id);
      if (analysis == null) {
        break missingId;
      }

      id = R.id.barchart;
      BarChart barchart = ViewBindings.findChildViewById(rootView, id);
      if (barchart == null) {
        break missingId;
      }

      id = R.id.bike;
      ImageView bike = ViewBindings.findChildViewById(rootView, id);
      if (bike == null) {
        break missingId;
      }

      id = R.id.connect;
      TextView connect = ViewBindings.findChildViewById(rootView, id);
      if (connect == null) {
        break missingId;
      }

      id = R.id.connection;
      TextView connection = ViewBindings.findChildViewById(rootView, id);
      if (connection == null) {
        break missingId;
      }

      id = R.id.connection_details;
      RelativeLayout connectionDetails = ViewBindings.findChildViewById(rootView, id);
      if (connectionDetails == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.fleet;
      TextView fleet = ViewBindings.findChildViewById(rootView, id);
      if (fleet == null) {
        break missingId;
      }

      id = R.id.health;
      ImageView health = ViewBindings.findChildViewById(rootView, id);
      if (health == null) {
        break missingId;
      }

      id = R.id.horizz;
      HorizontalScrollView horizz = ViewBindings.findChildViewById(rootView, id);
      if (horizz == null) {
        break missingId;
      }

      id = R.id.location;
      ImageView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.mappp;
      LinearLayout mappp = ViewBindings.findChildViewById(rootView, id);
      if (mappp == null) {
        break missingId;
      }

      id = R.id.maps;
      WebView maps = ViewBindings.findChildViewById(rootView, id);
      if (maps == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.payments;
      ImageView payments = ViewBindings.findChildViewById(rootView, id);
      if (payments == null) {
        break missingId;
      }

      id = R.id.piechart;
      PieChart piechart = ViewBindings.findChildViewById(rootView, id);
      if (piechart == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      id = R.id.util;
      TextView util = ViewBindings.findChildViewById(rootView, id);
      if (util == null) {
        break missingId;
      }

      return new ActivityContentsBinding((DrawerLayout) rootView, analysis, barchart, bike, connect,
          connection, connectionDetails, drawerLayout, fleet, health, horizz, location, mappp, maps,
          navView, payments, piechart, binding_toolbar, util);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
